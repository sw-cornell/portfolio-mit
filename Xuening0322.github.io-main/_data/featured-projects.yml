- name: BeatSplitter
  url: https://maxforlive.com/library/device/10505/tona-ai-beat-splitter
  code: https://maxforlive.com/library/device/10505/tona-ai-beat-splitter
  description: An AI-powered Ableton Live plugin designed for splitting stems for production, with a full machine learning inference pipeline on AWS. Built with my amazing team at <a class="underline-link" href="https://tona.ai">Tona.ai</a>. 
  image_name: ../img/featured/beatsplitter/beatsplitter.png
  used:
    - thing: Max/MSP
    - thing: Node.js
    - thing: Express.js
    - thing: Docker
    - thing: AWS

- name: Poem to Music Video App
  url: https://github.com/Xuening0322/poem-to-video-app
  code: https://github.com/Xuening0322/poem-to-video-app
  description: A Next.js app that analyzes poems and generates music videos with voice narration, leveraging OpenAI, MusicGen, and Replicate APIs for media generation.
  image_name: ../img/featured/poemtovideo/poemtovideo.png
  used:
    - thing: Next.js
    - thing: OpenAI API
    - thing: Replicate
    - thing: FFmpeg
    - thing: AWS
    - thing: Docker

- name: MeloStream Music App
  url: https://github.com/kyla2001/MeloStream2024
  code: https://github.com/kyla2001/MeloStream2024
  description: A Next.js music streaming app built for learning Next.js. It calls the Spotify API and allows users to create, manage, and explore playlists. Built with my amazing friend at Cornell Tech.
  image_name: ../img/featured/melostream/melostream.png
  used:
    - thing: Next.js
    - thing: NextAuth.js
    - thing: Spotify API
    - thing: Firebase
    - thing: Vercel

- name: Spotify Song Skips Prediction
  url: https://github.com/Xuening0322/aml-song-skips-prediction
  code: https://github.com/Xuening0322/aml-song-skips-prediction
  description: A machine learning project focused on predicting song skips on Spotify, using algorithms like Gradient Boosted Trees, LSTM, and Transformers. 
  image_name: ../img/other/spotify/spotify_dataset.png
  used:
    - thing: Python
    - thing: TensorFlow/Keras
    - thing: Scikit-learn
    - thing: Pandas
    - thing: NumPy

- name: Algorithmic Music Composition System
  url: https://xuening.wang/coming_soon
  code: https://xuening.wang/coming_soon
  description: My undergrad final year project where I built a system to compose full songs by controlling everything from individual bars to entire sections. It combines advanced music theory with deep generative models, using a symbolic Chinese pop music dataset to bring it to life.
  image_name: ../img/featured/fyp/fyp.jpg
  used:
    - thing: Python
    - thing: PyTorch
    - thing: C++
    - thing: MIDI
    - thing: Transformer
    - thing: Music Theory
    - thing: Music Composition

- name: AI-powered Music Production System
  url: https://github.com/Humming-Tacos
  code: https://github.com/Humming-Tacos
  description: An "AI Songwriter" application generating melodies and piano accompaniments from user vocal input, through an end-to-end pipeline of Singing Voice Transcription, AI Composition, and Real-time Music Synthesis. <a class="underline-link" href="https://drive.google.com/drive/folders/1lANT8V1tJDRIfL3dq94GuwVXPxf7tOuG">Demo available here!</a>
  image_name: ../img/featured/hummingtacos/hummingtacos.png
  used:
    - thing: PyTorch
    - thing: Flask
    - thing: Alibaba Cloud ECS
    - thing: RESTful APIs
    - thing: Docker
